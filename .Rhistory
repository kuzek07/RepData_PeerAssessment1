setwd("~/GitHub/datascience/module5/project1/RepData_PeerAssessment1")
# Chunk 1
if(!file.exists("activity.zip")) {
temp <- tempfile()
download.file("http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",temp)
unzip(temp)
unlink(temp)
}
data <- read.csv("activity.csv")
# Chunk 2
stepsByDay <- aggregate(steps ~ date, data, sum)
hist(stepsByDay$steps, main = paste("Total Steps Each Day"), col="blue", xlab="Number of Steps")
meanBefore <- mean(stepByDay$steps)
medianBefore <- median(stepsByDay$steps)
# Chunk 3
stepsByInterval <- aggregate(steps ~ interval, data, mean)
plot(stepsByInterval$interval,stepByInterval$steps, type="l", xlab="Interval", ylab="Number of Steps",main="Average Number of Steps per Day by Interval")
max_interval <- stepsByInterval[which.max(stepsByInterval$steps),1]
# Chunk 4
naActivity <- nrow(activity[is.na(activity$steps),])
# Chunk 5
## Create the average number of steps per weekday and interval
activityNoNA <- activity[!is.na(activity$steps),]
avgTable <- ddply(activityNoNA, .(interval, day), summarize, Avg = mean(steps))
## Create dataset with all NAs for substitution
noData<- activity[is.na(activity$steps),]
## Merge NA data with average weekday interval for substitution
newData<-merge(naData, avgTable, by=c("interval", "day"))
# Chunk 6
## Reorder the new substituded data in the same format as clean data set
newData2<- newData[,c(6,4,1,2,5)]
colnames(newData2)<- c("Steps", "Date", "Interval", "Day", "DateTime")
##Merge the NA averages and non NA data together
mergeData <- rbind(clean, newData2)
# Chunk 7
##Create sum of steps per date to compare with step 1
sumTable2 <- aggregate(mergeData$steps ~ mergeData$date, FUN=sum, )
colnames(sumTable2)<- c("Date", "Steps")
## Mean of Steps with NA data taken care of
meanAfter <- as.integer(mean(sumTable2$Steps))
## Median of Steps with NA data taken care of
medianAfter <- as.integer(median(sumTable2$Steps))
##Differences between before and after
meanDiff <- diff(meanAfter, meanBefore)
medianDiff <- diff(medianAfter, medianBefore)
# Chunk 8
## Creating the histogram of total steps per day, categorized by data set to show impact
hist(sumTable2$Steps, breaks=5, xlab="Steps", main = "Total Steps per Day with NAs Fixed", col="Blue")
hist(sumTable$Steps, breaks=5, xlab="Steps", main = "Total Steps per Day with NAs Fixed", col="Red", add=T)
legend("topright", c("Imputed Data", "Non-NA Data"), fill=c("Blue", "Red") )
# Chunk 9
## Create new category based on the days of the week
mergeData$DayCategory <- ifelse(mergeData$day %in% c("Saturday", "Sunday"), "Weekend", "Weekday")
# Chunk 10
library(lattice)
## Summarize data by interval and type of day
intervalTable2 <- ddply(mergeData, .(interval, DayCategory), summarize, Avg = mean(steps))
##Plot data in a panel plot
xyplot(Avg~interval|DayCategory, data=intervalTable2, type="l",  layout = c(1,2),
main="Average Steps per Interval Based on Type of Day",
ylab="Average Number of Steps", xlab="Interval")
install.packages("ggplot2")
install.packages("lattice")
install.packages("lattice")
setwd("~/GitHub/datascience/module5/project1/RepData_PeerAssessment1")
install.packages("plyr")
install/install.packages("ddply")
install.packages("ddply")
install.packages("dplyr")
setwd("~/GitHub/datascience/module5/project1/RepData_PeerAssessment1")
library(knitr)
knit2html('PA1_template.Rmd')
render_html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
library(rmarkdown)
render_html("PA1_template.Rmd")
packageurl <- "http://cran.r-project.org/src/contrib/Archive/knitr/knitr_1.12.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
library(knitr)
knit2html('PA1_template.Rmd')
knit2html("PA1_template.Rmd")
render_html("PA1_template.Rmd")
render_html('PA1_template.Rmd')
